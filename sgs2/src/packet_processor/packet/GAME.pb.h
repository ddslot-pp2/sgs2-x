// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GAME.proto

#ifndef PROTOBUF_GAME_2eproto__INCLUDED
#define PROTOBUF_GAME_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace GAME {
class BULLET_INFO;
class BULLET_INFODefaultTypeInternal;
extern BULLET_INFODefaultTypeInternal _BULLET_INFO_default_instance_;
class CS_ENHANCE_BUFF;
class CS_ENHANCE_BUFFDefaultTypeInternal;
extern CS_ENHANCE_BUFFDefaultTypeInternal _CS_ENHANCE_BUFF_default_instance_;
class CS_FIRE;
class CS_FIREDefaultTypeInternal;
extern CS_FIREDefaultTypeInternal _CS_FIRE_default_instance_;
class CS_NOTI_MOVE;
class CS_NOTI_MOVEDefaultTypeInternal;
extern CS_NOTI_MOVEDefaultTypeInternal _CS_NOTI_MOVE_default_instance_;
class CS_PING;
class CS_PINGDefaultTypeInternal;
extern CS_PINGDefaultTypeInternal _CS_PING_default_instance_;
class CS_RESPAWN_CHARACTER;
class CS_RESPAWN_CHARACTERDefaultTypeInternal;
extern CS_RESPAWN_CHARACTERDefaultTypeInternal _CS_RESPAWN_CHARACTER_default_instance_;
class CS_SYNC_FIELD;
class CS_SYNC_FIELDDefaultTypeInternal;
extern CS_SYNC_FIELDDefaultTypeInternal _CS_SYNC_FIELD_default_instance_;
class DAMAGE_INFO;
class DAMAGE_INFODefaultTypeInternal;
extern DAMAGE_INFODefaultTypeInternal _DAMAGE_INFO_default_instance_;
class OTHER_INFO;
class OTHER_INFODefaultTypeInternal;
extern OTHER_INFODefaultTypeInternal _OTHER_INFO_default_instance_;
class SC_NOTI_DESTROY_BULLET;
class SC_NOTI_DESTROY_BULLETDefaultTypeInternal;
extern SC_NOTI_DESTROY_BULLETDefaultTypeInternal _SC_NOTI_DESTROY_BULLET_default_instance_;
class SC_NOTI_DESTROY_CHARACTER;
class SC_NOTI_DESTROY_CHARACTERDefaultTypeInternal;
extern SC_NOTI_DESTROY_CHARACTERDefaultTypeInternal _SC_NOTI_DESTROY_CHARACTER_default_instance_;
class SC_NOTI_FIRE;
class SC_NOTI_FIREDefaultTypeInternal;
extern SC_NOTI_FIREDefaultTypeInternal _SC_NOTI_FIRE_default_instance_;
class SC_NOTI_OTHER_ENTER_FIELD;
class SC_NOTI_OTHER_ENTER_FIELDDefaultTypeInternal;
extern SC_NOTI_OTHER_ENTER_FIELDDefaultTypeInternal _SC_NOTI_OTHER_ENTER_FIELD_default_instance_;
class SC_NOTI_OTHER_LEAVE_FIELD;
class SC_NOTI_OTHER_LEAVE_FIELDDefaultTypeInternal;
extern SC_NOTI_OTHER_LEAVE_FIELDDefaultTypeInternal _SC_NOTI_OTHER_LEAVE_FIELD_default_instance_;
class SC_NOTI_OTHER_MOVE;
class SC_NOTI_OTHER_MOVEDefaultTypeInternal;
extern SC_NOTI_OTHER_MOVEDefaultTypeInternal _SC_NOTI_OTHER_MOVE_default_instance_;
class SC_NOTI_RESPAWN_CHARACTER;
class SC_NOTI_RESPAWN_CHARACTERDefaultTypeInternal;
extern SC_NOTI_RESPAWN_CHARACTERDefaultTypeInternal _SC_NOTI_RESPAWN_CHARACTER_default_instance_;
class SC_NOTI_UPDATE_CHARACTER_STATUS;
class SC_NOTI_UPDATE_CHARACTER_STATUSDefaultTypeInternal;
extern SC_NOTI_UPDATE_CHARACTER_STATUSDefaultTypeInternal _SC_NOTI_UPDATE_CHARACTER_STATUS_default_instance_;
class SC_PING;
class SC_PINGDefaultTypeInternal;
extern SC_PINGDefaultTypeInternal _SC_PING_default_instance_;
class SC_SELECT_BUFF;
class SC_SELECT_BUFFDefaultTypeInternal;
extern SC_SELECT_BUFFDefaultTypeInternal _SC_SELECT_BUFF_default_instance_;
class SC_SYNC_FIELD;
class SC_SYNC_FIELDDefaultTypeInternal;
extern SC_SYNC_FIELDDefaultTypeInternal _SC_SYNC_FIELD_default_instance_;
}  // namespace GAME

namespace GAME {

namespace protobuf_GAME_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_GAME_2eproto

// ===================================================================

class CS_PING : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.CS_PING) */ {
 public:
  CS_PING();
  virtual ~CS_PING();

  CS_PING(const CS_PING& from);

  inline CS_PING& operator=(const CS_PING& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_PING& default_instance();

  static inline const CS_PING* internal_default_instance() {
    return reinterpret_cast<const CS_PING*>(
               &_CS_PING_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CS_PING* other);

  // implements Message ----------------------------------------------

  inline CS_PING* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_PING* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_PING& from);
  void MergeFrom(const CS_PING& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_PING* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 timestamp = 1;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GAME.CS_PING)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 timestamp_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_PING : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.SC_PING) */ {
 public:
  SC_PING();
  virtual ~SC_PING();

  SC_PING(const SC_PING& from);

  inline SC_PING& operator=(const SC_PING& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_PING& default_instance();

  static inline const SC_PING* internal_default_instance() {
    return reinterpret_cast<const SC_PING*>(
               &_SC_PING_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SC_PING* other);

  // implements Message ----------------------------------------------

  inline SC_PING* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_PING* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_PING& from);
  void MergeFrom(const SC_PING& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_PING* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 timestamp = 1;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GAME.SC_PING)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 timestamp_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OTHER_INFO : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.OTHER_INFO) */ {
 public:
  OTHER_INFO();
  virtual ~OTHER_INFO();

  OTHER_INFO(const OTHER_INFO& from);

  inline OTHER_INFO& operator=(const OTHER_INFO& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OTHER_INFO& default_instance();

  static inline const OTHER_INFO* internal_default_instance() {
    return reinterpret_cast<const OTHER_INFO*>(
               &_OTHER_INFO_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(OTHER_INFO* other);

  // implements Message ----------------------------------------------

  inline OTHER_INFO* New() const PROTOBUF_FINAL { return New(NULL); }

  OTHER_INFO* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OTHER_INFO& from);
  void MergeFrom(const OTHER_INFO& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OTHER_INFO* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string nickname = 3;
  void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // int64 obj_id = 1;
  void clear_obj_id();
  static const int kObjIdFieldNumber = 1;
  ::google::protobuf::int64 obj_id() const;
  void set_obj_id(::google::protobuf::int64 value);

  // int32 tank_type = 2;
  void clear_tank_type();
  static const int kTankTypeFieldNumber = 2;
  ::google::protobuf::int32 tank_type() const;
  void set_tank_type(::google::protobuf::int32 value);

  // float pos_x = 4;
  void clear_pos_x();
  static const int kPosXFieldNumber = 4;
  float pos_x() const;
  void set_pos_x(float value);

  // float pos_y = 5;
  void clear_pos_y();
  static const int kPosYFieldNumber = 5;
  float pos_y() const;
  void set_pos_y(float value);

  // float pos_z = 6;
  void clear_pos_z();
  static const int kPosZFieldNumber = 6;
  float pos_z() const;
  void set_pos_z(float value);

  // int32 max_hp = 7;
  void clear_max_hp();
  static const int kMaxHpFieldNumber = 7;
  ::google::protobuf::int32 max_hp() const;
  void set_max_hp(::google::protobuf::int32 value);

  // int32 hp = 8;
  void clear_hp();
  static const int kHpFieldNumber = 8;
  ::google::protobuf::int32 hp() const;
  void set_hp(::google::protobuf::int32 value);

  // float speed = 9;
  void clear_speed();
  static const int kSpeedFieldNumber = 9;
  float speed() const;
  void set_speed(float value);

  // float reload_time = 10;
  void clear_reload_time();
  static const int kReloadTimeFieldNumber = 10;
  float reload_time() const;
  void set_reload_time(float value);

  // @@protoc_insertion_point(class_scope:GAME.OTHER_INFO)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::int64 obj_id_;
  ::google::protobuf::int32 tank_type_;
  float pos_x_;
  float pos_y_;
  float pos_z_;
  ::google::protobuf::int32 max_hp_;
  ::google::protobuf::int32 hp_;
  float speed_;
  float reload_time_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_SYNC_FIELD : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.CS_SYNC_FIELD) */ {
 public:
  CS_SYNC_FIELD();
  virtual ~CS_SYNC_FIELD();

  CS_SYNC_FIELD(const CS_SYNC_FIELD& from);

  inline CS_SYNC_FIELD& operator=(const CS_SYNC_FIELD& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_SYNC_FIELD& default_instance();

  static inline const CS_SYNC_FIELD* internal_default_instance() {
    return reinterpret_cast<const CS_SYNC_FIELD*>(
               &_CS_SYNC_FIELD_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CS_SYNC_FIELD* other);

  // implements Message ----------------------------------------------

  inline CS_SYNC_FIELD* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_SYNC_FIELD* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_SYNC_FIELD& from);
  void MergeFrom(const CS_SYNC_FIELD& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_SYNC_FIELD* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 field_id = 1;
  void clear_field_id();
  static const int kFieldIdFieldNumber = 1;
  ::google::protobuf::int32 field_id() const;
  void set_field_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GAME.CS_SYNC_FIELD)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 field_id_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_SYNC_FIELD : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.SC_SYNC_FIELD) */ {
 public:
  SC_SYNC_FIELD();
  virtual ~SC_SYNC_FIELD();

  SC_SYNC_FIELD(const SC_SYNC_FIELD& from);

  inline SC_SYNC_FIELD& operator=(const SC_SYNC_FIELD& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_SYNC_FIELD& default_instance();

  static inline const SC_SYNC_FIELD* internal_default_instance() {
    return reinterpret_cast<const SC_SYNC_FIELD*>(
               &_SC_SYNC_FIELD_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SC_SYNC_FIELD* other);

  // implements Message ----------------------------------------------

  inline SC_SYNC_FIELD* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_SYNC_FIELD* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_SYNC_FIELD& from);
  void MergeFrom(const SC_SYNC_FIELD& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_SYNC_FIELD* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GAME.OTHER_INFO other_infos = 11;
  int other_infos_size() const;
  void clear_other_infos();
  static const int kOtherInfosFieldNumber = 11;
  const ::GAME::OTHER_INFO& other_infos(int index) const;
  ::GAME::OTHER_INFO* mutable_other_infos(int index);
  ::GAME::OTHER_INFO* add_other_infos();
  ::google::protobuf::RepeatedPtrField< ::GAME::OTHER_INFO >*
      mutable_other_infos();
  const ::google::protobuf::RepeatedPtrField< ::GAME::OTHER_INFO >&
      other_infos() const;

  // string nickname = 3;
  void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // int64 obj_id = 1;
  void clear_obj_id();
  static const int kObjIdFieldNumber = 1;
  ::google::protobuf::int64 obj_id() const;
  void set_obj_id(::google::protobuf::int64 value);

  // int32 tank_type = 2;
  void clear_tank_type();
  static const int kTankTypeFieldNumber = 2;
  ::google::protobuf::int32 tank_type() const;
  void set_tank_type(::google::protobuf::int32 value);

  // float pos_x = 4;
  void clear_pos_x();
  static const int kPosXFieldNumber = 4;
  float pos_x() const;
  void set_pos_x(float value);

  // float pos_y = 5;
  void clear_pos_y();
  static const int kPosYFieldNumber = 5;
  float pos_y() const;
  void set_pos_y(float value);

  // float pos_z = 6;
  void clear_pos_z();
  static const int kPosZFieldNumber = 6;
  float pos_z() const;
  void set_pos_z(float value);

  // int32 max_hp = 7;
  void clear_max_hp();
  static const int kMaxHpFieldNumber = 7;
  ::google::protobuf::int32 max_hp() const;
  void set_max_hp(::google::protobuf::int32 value);

  // int32 hp = 8;
  void clear_hp();
  static const int kHpFieldNumber = 8;
  ::google::protobuf::int32 hp() const;
  void set_hp(::google::protobuf::int32 value);

  // float speed = 9;
  void clear_speed();
  static const int kSpeedFieldNumber = 9;
  float speed() const;
  void set_speed(float value);

  // float reload_time = 10;
  void clear_reload_time();
  static const int kReloadTimeFieldNumber = 10;
  float reload_time() const;
  void set_reload_time(float value);

  // @@protoc_insertion_point(class_scope:GAME.SC_SYNC_FIELD)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::GAME::OTHER_INFO > other_infos_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::int64 obj_id_;
  ::google::protobuf::int32 tank_type_;
  float pos_x_;
  float pos_y_;
  float pos_z_;
  ::google::protobuf::int32 max_hp_;
  ::google::protobuf::int32 hp_;
  float speed_;
  float reload_time_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_NOTI_OTHER_ENTER_FIELD : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.SC_NOTI_OTHER_ENTER_FIELD) */ {
 public:
  SC_NOTI_OTHER_ENTER_FIELD();
  virtual ~SC_NOTI_OTHER_ENTER_FIELD();

  SC_NOTI_OTHER_ENTER_FIELD(const SC_NOTI_OTHER_ENTER_FIELD& from);

  inline SC_NOTI_OTHER_ENTER_FIELD& operator=(const SC_NOTI_OTHER_ENTER_FIELD& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_NOTI_OTHER_ENTER_FIELD& default_instance();

  static inline const SC_NOTI_OTHER_ENTER_FIELD* internal_default_instance() {
    return reinterpret_cast<const SC_NOTI_OTHER_ENTER_FIELD*>(
               &_SC_NOTI_OTHER_ENTER_FIELD_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(SC_NOTI_OTHER_ENTER_FIELD* other);

  // implements Message ----------------------------------------------

  inline SC_NOTI_OTHER_ENTER_FIELD* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_NOTI_OTHER_ENTER_FIELD* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_NOTI_OTHER_ENTER_FIELD& from);
  void MergeFrom(const SC_NOTI_OTHER_ENTER_FIELD& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_NOTI_OTHER_ENTER_FIELD* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string nickname = 3;
  void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // int64 obj_id = 1;
  void clear_obj_id();
  static const int kObjIdFieldNumber = 1;
  ::google::protobuf::int64 obj_id() const;
  void set_obj_id(::google::protobuf::int64 value);

  // int32 tank_type = 2;
  void clear_tank_type();
  static const int kTankTypeFieldNumber = 2;
  ::google::protobuf::int32 tank_type() const;
  void set_tank_type(::google::protobuf::int32 value);

  // float pos_x = 4;
  void clear_pos_x();
  static const int kPosXFieldNumber = 4;
  float pos_x() const;
  void set_pos_x(float value);

  // float pos_y = 5;
  void clear_pos_y();
  static const int kPosYFieldNumber = 5;
  float pos_y() const;
  void set_pos_y(float value);

  // float pos_z = 6;
  void clear_pos_z();
  static const int kPosZFieldNumber = 6;
  float pos_z() const;
  void set_pos_z(float value);

  // int32 max_hp = 7;
  void clear_max_hp();
  static const int kMaxHpFieldNumber = 7;
  ::google::protobuf::int32 max_hp() const;
  void set_max_hp(::google::protobuf::int32 value);

  // int32 hp = 8;
  void clear_hp();
  static const int kHpFieldNumber = 8;
  ::google::protobuf::int32 hp() const;
  void set_hp(::google::protobuf::int32 value);

  // float speed = 9;
  void clear_speed();
  static const int kSpeedFieldNumber = 9;
  float speed() const;
  void set_speed(float value);

  // float reload_time = 10;
  void clear_reload_time();
  static const int kReloadTimeFieldNumber = 10;
  float reload_time() const;
  void set_reload_time(float value);

  // @@protoc_insertion_point(class_scope:GAME.SC_NOTI_OTHER_ENTER_FIELD)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::int64 obj_id_;
  ::google::protobuf::int32 tank_type_;
  float pos_x_;
  float pos_y_;
  float pos_z_;
  ::google::protobuf::int32 max_hp_;
  ::google::protobuf::int32 hp_;
  float speed_;
  float reload_time_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_NOTI_OTHER_LEAVE_FIELD : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.SC_NOTI_OTHER_LEAVE_FIELD) */ {
 public:
  SC_NOTI_OTHER_LEAVE_FIELD();
  virtual ~SC_NOTI_OTHER_LEAVE_FIELD();

  SC_NOTI_OTHER_LEAVE_FIELD(const SC_NOTI_OTHER_LEAVE_FIELD& from);

  inline SC_NOTI_OTHER_LEAVE_FIELD& operator=(const SC_NOTI_OTHER_LEAVE_FIELD& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_NOTI_OTHER_LEAVE_FIELD& default_instance();

  static inline const SC_NOTI_OTHER_LEAVE_FIELD* internal_default_instance() {
    return reinterpret_cast<const SC_NOTI_OTHER_LEAVE_FIELD*>(
               &_SC_NOTI_OTHER_LEAVE_FIELD_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(SC_NOTI_OTHER_LEAVE_FIELD* other);

  // implements Message ----------------------------------------------

  inline SC_NOTI_OTHER_LEAVE_FIELD* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_NOTI_OTHER_LEAVE_FIELD* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_NOTI_OTHER_LEAVE_FIELD& from);
  void MergeFrom(const SC_NOTI_OTHER_LEAVE_FIELD& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_NOTI_OTHER_LEAVE_FIELD* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 obj_id = 1;
  void clear_obj_id();
  static const int kObjIdFieldNumber = 1;
  ::google::protobuf::int64 obj_id() const;
  void set_obj_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GAME.SC_NOTI_OTHER_LEAVE_FIELD)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 obj_id_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_NOTI_MOVE : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.CS_NOTI_MOVE) */ {
 public:
  CS_NOTI_MOVE();
  virtual ~CS_NOTI_MOVE();

  CS_NOTI_MOVE(const CS_NOTI_MOVE& from);

  inline CS_NOTI_MOVE& operator=(const CS_NOTI_MOVE& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_NOTI_MOVE& default_instance();

  static inline const CS_NOTI_MOVE* internal_default_instance() {
    return reinterpret_cast<const CS_NOTI_MOVE*>(
               &_CS_NOTI_MOVE_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(CS_NOTI_MOVE* other);

  // implements Message ----------------------------------------------

  inline CS_NOTI_MOVE* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_NOTI_MOVE* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_NOTI_MOVE& from);
  void MergeFrom(const CS_NOTI_MOVE& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_NOTI_MOVE* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float pos_x = 1;
  void clear_pos_x();
  static const int kPosXFieldNumber = 1;
  float pos_x() const;
  void set_pos_x(float value);

  // float pos_y = 2;
  void clear_pos_y();
  static const int kPosYFieldNumber = 2;
  float pos_y() const;
  void set_pos_y(float value);

  // float pos_z = 3;
  void clear_pos_z();
  static const int kPosZFieldNumber = 3;
  float pos_z() const;
  void set_pos_z(float value);

  // @@protoc_insertion_point(class_scope:GAME.CS_NOTI_MOVE)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float pos_x_;
  float pos_y_;
  float pos_z_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_NOTI_OTHER_MOVE : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.SC_NOTI_OTHER_MOVE) */ {
 public:
  SC_NOTI_OTHER_MOVE();
  virtual ~SC_NOTI_OTHER_MOVE();

  SC_NOTI_OTHER_MOVE(const SC_NOTI_OTHER_MOVE& from);

  inline SC_NOTI_OTHER_MOVE& operator=(const SC_NOTI_OTHER_MOVE& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_NOTI_OTHER_MOVE& default_instance();

  static inline const SC_NOTI_OTHER_MOVE* internal_default_instance() {
    return reinterpret_cast<const SC_NOTI_OTHER_MOVE*>(
               &_SC_NOTI_OTHER_MOVE_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(SC_NOTI_OTHER_MOVE* other);

  // implements Message ----------------------------------------------

  inline SC_NOTI_OTHER_MOVE* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_NOTI_OTHER_MOVE* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_NOTI_OTHER_MOVE& from);
  void MergeFrom(const SC_NOTI_OTHER_MOVE& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_NOTI_OTHER_MOVE* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 obj_id = 1;
  void clear_obj_id();
  static const int kObjIdFieldNumber = 1;
  ::google::protobuf::int64 obj_id() const;
  void set_obj_id(::google::protobuf::int64 value);

  // float pos_x = 2;
  void clear_pos_x();
  static const int kPosXFieldNumber = 2;
  float pos_x() const;
  void set_pos_x(float value);

  // float pos_y = 3;
  void clear_pos_y();
  static const int kPosYFieldNumber = 3;
  float pos_y() const;
  void set_pos_y(float value);

  // float pos_z = 4;
  void clear_pos_z();
  static const int kPosZFieldNumber = 4;
  float pos_z() const;
  void set_pos_z(float value);

  // @@protoc_insertion_point(class_scope:GAME.SC_NOTI_OTHER_MOVE)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 obj_id_;
  float pos_x_;
  float pos_y_;
  float pos_z_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BULLET_INFO : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.BULLET_INFO) */ {
 public:
  BULLET_INFO();
  virtual ~BULLET_INFO();

  BULLET_INFO(const BULLET_INFO& from);

  inline BULLET_INFO& operator=(const BULLET_INFO& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BULLET_INFO& default_instance();

  static inline const BULLET_INFO* internal_default_instance() {
    return reinterpret_cast<const BULLET_INFO*>(
               &_BULLET_INFO_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(BULLET_INFO* other);

  // implements Message ----------------------------------------------

  inline BULLET_INFO* New() const PROTOBUF_FINAL { return New(NULL); }

  BULLET_INFO* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BULLET_INFO& from);
  void MergeFrom(const BULLET_INFO& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BULLET_INFO* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 bullet_id = 1;
  void clear_bullet_id();
  static const int kBulletIdFieldNumber = 1;
  ::google::protobuf::int64 bullet_id() const;
  void set_bullet_id(::google::protobuf::int64 value);

  // float dir_x = 2;
  void clear_dir_x();
  static const int kDirXFieldNumber = 2;
  float dir_x() const;
  void set_dir_x(float value);

  // float dir_y = 3;
  void clear_dir_y();
  static const int kDirYFieldNumber = 3;
  float dir_y() const;
  void set_dir_y(float value);

  // float dir_z = 4;
  void clear_dir_z();
  static const int kDirZFieldNumber = 4;
  float dir_z() const;
  void set_dir_z(float value);

  // float size_x = 5;
  void clear_size_x();
  static const int kSizeXFieldNumber = 5;
  float size_x() const;
  void set_size_x(float value);

  // float size_y = 6;
  void clear_size_y();
  static const int kSizeYFieldNumber = 6;
  float size_y() const;
  void set_size_y(float value);

  // float size_z = 7;
  void clear_size_z();
  static const int kSizeZFieldNumber = 7;
  float size_z() const;
  void set_size_z(float value);

  // float speed = 8;
  void clear_speed();
  static const int kSpeedFieldNumber = 8;
  float speed() const;
  void set_speed(float value);

  // float distance = 9;
  void clear_distance();
  static const int kDistanceFieldNumber = 9;
  float distance() const;
  void set_distance(float value);

  // @@protoc_insertion_point(class_scope:GAME.BULLET_INFO)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 bullet_id_;
  float dir_x_;
  float dir_y_;
  float dir_z_;
  float size_x_;
  float size_y_;
  float size_z_;
  float speed_;
  float distance_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_FIRE : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.CS_FIRE) */ {
 public:
  CS_FIRE();
  virtual ~CS_FIRE();

  CS_FIRE(const CS_FIRE& from);

  inline CS_FIRE& operator=(const CS_FIRE& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_FIRE& default_instance();

  static inline const CS_FIRE* internal_default_instance() {
    return reinterpret_cast<const CS_FIRE*>(
               &_CS_FIRE_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(CS_FIRE* other);

  // implements Message ----------------------------------------------

  inline CS_FIRE* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_FIRE* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_FIRE& from);
  void MergeFrom(const CS_FIRE& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_FIRE* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GAME.BULLET_INFO bullet_infos = 8;
  int bullet_infos_size() const;
  void clear_bullet_infos();
  static const int kBulletInfosFieldNumber = 8;
  const ::GAME::BULLET_INFO& bullet_infos(int index) const;
  ::GAME::BULLET_INFO* mutable_bullet_infos(int index);
  ::GAME::BULLET_INFO* add_bullet_infos();
  ::google::protobuf::RepeatedPtrField< ::GAME::BULLET_INFO >*
      mutable_bullet_infos();
  const ::google::protobuf::RepeatedPtrField< ::GAME::BULLET_INFO >&
      bullet_infos() const;

  // int32 bullet_type = 1;
  void clear_bullet_type();
  static const int kBulletTypeFieldNumber = 1;
  ::google::protobuf::int32 bullet_type() const;
  void set_bullet_type(::google::protobuf::int32 value);

  // float pos_x = 2;
  void clear_pos_x();
  static const int kPosXFieldNumber = 2;
  float pos_x() const;
  void set_pos_x(float value);

  // float pos_y = 3;
  void clear_pos_y();
  static const int kPosYFieldNumber = 3;
  float pos_y() const;
  void set_pos_y(float value);

  // float pos_z = 4;
  void clear_pos_z();
  static const int kPosZFieldNumber = 4;
  float pos_z() const;
  void set_pos_z(float value);

  // float dir_x = 5;
  void clear_dir_x();
  static const int kDirXFieldNumber = 5;
  float dir_x() const;
  void set_dir_x(float value);

  // float dir_y = 6;
  void clear_dir_y();
  static const int kDirYFieldNumber = 6;
  float dir_y() const;
  void set_dir_y(float value);

  // float dir_z = 7;
  void clear_dir_z();
  static const int kDirZFieldNumber = 7;
  float dir_z() const;
  void set_dir_z(float value);

  // @@protoc_insertion_point(class_scope:GAME.CS_FIRE)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::GAME::BULLET_INFO > bullet_infos_;
  ::google::protobuf::int32 bullet_type_;
  float pos_x_;
  float pos_y_;
  float pos_z_;
  float dir_x_;
  float dir_y_;
  float dir_z_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_NOTI_FIRE : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.SC_NOTI_FIRE) */ {
 public:
  SC_NOTI_FIRE();
  virtual ~SC_NOTI_FIRE();

  SC_NOTI_FIRE(const SC_NOTI_FIRE& from);

  inline SC_NOTI_FIRE& operator=(const SC_NOTI_FIRE& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_NOTI_FIRE& default_instance();

  static inline const SC_NOTI_FIRE* internal_default_instance() {
    return reinterpret_cast<const SC_NOTI_FIRE*>(
               &_SC_NOTI_FIRE_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(SC_NOTI_FIRE* other);

  // implements Message ----------------------------------------------

  inline SC_NOTI_FIRE* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_NOTI_FIRE* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_NOTI_FIRE& from);
  void MergeFrom(const SC_NOTI_FIRE& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_NOTI_FIRE* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GAME.BULLET_INFO bullet_infos = 9;
  int bullet_infos_size() const;
  void clear_bullet_infos();
  static const int kBulletInfosFieldNumber = 9;
  const ::GAME::BULLET_INFO& bullet_infos(int index) const;
  ::GAME::BULLET_INFO* mutable_bullet_infos(int index);
  ::GAME::BULLET_INFO* add_bullet_infos();
  ::google::protobuf::RepeatedPtrField< ::GAME::BULLET_INFO >*
      mutable_bullet_infos();
  const ::google::protobuf::RepeatedPtrField< ::GAME::BULLET_INFO >&
      bullet_infos() const;

  // int64 obj_id = 1;
  void clear_obj_id();
  static const int kObjIdFieldNumber = 1;
  ::google::protobuf::int64 obj_id() const;
  void set_obj_id(::google::protobuf::int64 value);

  // int32 bullet_type = 2;
  void clear_bullet_type();
  static const int kBulletTypeFieldNumber = 2;
  ::google::protobuf::int32 bullet_type() const;
  void set_bullet_type(::google::protobuf::int32 value);

  // float pos_x = 3;
  void clear_pos_x();
  static const int kPosXFieldNumber = 3;
  float pos_x() const;
  void set_pos_x(float value);

  // float pos_y = 4;
  void clear_pos_y();
  static const int kPosYFieldNumber = 4;
  float pos_y() const;
  void set_pos_y(float value);

  // float pos_z = 5;
  void clear_pos_z();
  static const int kPosZFieldNumber = 5;
  float pos_z() const;
  void set_pos_z(float value);

  // float dir_x = 6;
  void clear_dir_x();
  static const int kDirXFieldNumber = 6;
  float dir_x() const;
  void set_dir_x(float value);

  // float dir_y = 7;
  void clear_dir_y();
  static const int kDirYFieldNumber = 7;
  float dir_y() const;
  void set_dir_y(float value);

  // float dir_z = 8;
  void clear_dir_z();
  static const int kDirZFieldNumber = 8;
  float dir_z() const;
  void set_dir_z(float value);

  // @@protoc_insertion_point(class_scope:GAME.SC_NOTI_FIRE)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::GAME::BULLET_INFO > bullet_infos_;
  ::google::protobuf::int64 obj_id_;
  ::google::protobuf::int32 bullet_type_;
  float pos_x_;
  float pos_y_;
  float pos_z_;
  float dir_x_;
  float dir_y_;
  float dir_z_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DAMAGE_INFO : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.DAMAGE_INFO) */ {
 public:
  DAMAGE_INFO();
  virtual ~DAMAGE_INFO();

  DAMAGE_INFO(const DAMAGE_INFO& from);

  inline DAMAGE_INFO& operator=(const DAMAGE_INFO& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DAMAGE_INFO& default_instance();

  static inline const DAMAGE_INFO* internal_default_instance() {
    return reinterpret_cast<const DAMAGE_INFO*>(
               &_DAMAGE_INFO_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(DAMAGE_INFO* other);

  // implements Message ----------------------------------------------

  inline DAMAGE_INFO* New() const PROTOBUF_FINAL { return New(NULL); }

  DAMAGE_INFO* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DAMAGE_INFO& from);
  void MergeFrom(const DAMAGE_INFO& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DAMAGE_INFO* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 target_id = 1;
  void clear_target_id();
  static const int kTargetIdFieldNumber = 1;
  ::google::protobuf::int64 target_id() const;
  void set_target_id(::google::protobuf::int64 value);

  // int64 damage = 3;
  void clear_damage();
  static const int kDamageFieldNumber = 3;
  ::google::protobuf::int64 damage() const;
  void set_damage(::google::protobuf::int64 value);

  // int32 hp = 2;
  void clear_hp();
  static const int kHpFieldNumber = 2;
  ::google::protobuf::int32 hp() const;
  void set_hp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GAME.DAMAGE_INFO)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 target_id_;
  ::google::protobuf::int64 damage_;
  ::google::protobuf::int32 hp_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_NOTI_DESTROY_BULLET : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.SC_NOTI_DESTROY_BULLET) */ {
 public:
  SC_NOTI_DESTROY_BULLET();
  virtual ~SC_NOTI_DESTROY_BULLET();

  SC_NOTI_DESTROY_BULLET(const SC_NOTI_DESTROY_BULLET& from);

  inline SC_NOTI_DESTROY_BULLET& operator=(const SC_NOTI_DESTROY_BULLET& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_NOTI_DESTROY_BULLET& default_instance();

  static inline const SC_NOTI_DESTROY_BULLET* internal_default_instance() {
    return reinterpret_cast<const SC_NOTI_DESTROY_BULLET*>(
               &_SC_NOTI_DESTROY_BULLET_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(SC_NOTI_DESTROY_BULLET* other);

  // implements Message ----------------------------------------------

  inline SC_NOTI_DESTROY_BULLET* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_NOTI_DESTROY_BULLET* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_NOTI_DESTROY_BULLET& from);
  void MergeFrom(const SC_NOTI_DESTROY_BULLET& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_NOTI_DESTROY_BULLET* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GAME.DAMAGE_INFO damage_infos = 3;
  int damage_infos_size() const;
  void clear_damage_infos();
  static const int kDamageInfosFieldNumber = 3;
  const ::GAME::DAMAGE_INFO& damage_infos(int index) const;
  ::GAME::DAMAGE_INFO* mutable_damage_infos(int index);
  ::GAME::DAMAGE_INFO* add_damage_infos();
  ::google::protobuf::RepeatedPtrField< ::GAME::DAMAGE_INFO >*
      mutable_damage_infos();
  const ::google::protobuf::RepeatedPtrField< ::GAME::DAMAGE_INFO >&
      damage_infos() const;

  // int64 obj_id = 1;
  void clear_obj_id();
  static const int kObjIdFieldNumber = 1;
  ::google::protobuf::int64 obj_id() const;
  void set_obj_id(::google::protobuf::int64 value);

  // int64 bullet_id = 2;
  void clear_bullet_id();
  static const int kBulletIdFieldNumber = 2;
  ::google::protobuf::int64 bullet_id() const;
  void set_bullet_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GAME.SC_NOTI_DESTROY_BULLET)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::GAME::DAMAGE_INFO > damage_infos_;
  ::google::protobuf::int64 obj_id_;
  ::google::protobuf::int64 bullet_id_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_NOTI_DESTROY_CHARACTER : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.SC_NOTI_DESTROY_CHARACTER) */ {
 public:
  SC_NOTI_DESTROY_CHARACTER();
  virtual ~SC_NOTI_DESTROY_CHARACTER();

  SC_NOTI_DESTROY_CHARACTER(const SC_NOTI_DESTROY_CHARACTER& from);

  inline SC_NOTI_DESTROY_CHARACTER& operator=(const SC_NOTI_DESTROY_CHARACTER& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_NOTI_DESTROY_CHARACTER& default_instance();

  static inline const SC_NOTI_DESTROY_CHARACTER* internal_default_instance() {
    return reinterpret_cast<const SC_NOTI_DESTROY_CHARACTER*>(
               &_SC_NOTI_DESTROY_CHARACTER_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(SC_NOTI_DESTROY_CHARACTER* other);

  // implements Message ----------------------------------------------

  inline SC_NOTI_DESTROY_CHARACTER* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_NOTI_DESTROY_CHARACTER* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_NOTI_DESTROY_CHARACTER& from);
  void MergeFrom(const SC_NOTI_DESTROY_CHARACTER& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_NOTI_DESTROY_CHARACTER* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 obj_id = 1;
  void clear_obj_id();
  static const int kObjIdFieldNumber = 1;
  ::google::protobuf::int64 obj_id() const;
  void set_obj_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:GAME.SC_NOTI_DESTROY_CHARACTER)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 obj_id_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_RESPAWN_CHARACTER : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.CS_RESPAWN_CHARACTER) */ {
 public:
  CS_RESPAWN_CHARACTER();
  virtual ~CS_RESPAWN_CHARACTER();

  CS_RESPAWN_CHARACTER(const CS_RESPAWN_CHARACTER& from);

  inline CS_RESPAWN_CHARACTER& operator=(const CS_RESPAWN_CHARACTER& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_RESPAWN_CHARACTER& default_instance();

  static inline const CS_RESPAWN_CHARACTER* internal_default_instance() {
    return reinterpret_cast<const CS_RESPAWN_CHARACTER*>(
               &_CS_RESPAWN_CHARACTER_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(CS_RESPAWN_CHARACTER* other);

  // implements Message ----------------------------------------------

  inline CS_RESPAWN_CHARACTER* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_RESPAWN_CHARACTER* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_RESPAWN_CHARACTER& from);
  void MergeFrom(const CS_RESPAWN_CHARACTER& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_RESPAWN_CHARACTER* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GAME.CS_RESPAWN_CHARACTER)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_NOTI_RESPAWN_CHARACTER : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.SC_NOTI_RESPAWN_CHARACTER) */ {
 public:
  SC_NOTI_RESPAWN_CHARACTER();
  virtual ~SC_NOTI_RESPAWN_CHARACTER();

  SC_NOTI_RESPAWN_CHARACTER(const SC_NOTI_RESPAWN_CHARACTER& from);

  inline SC_NOTI_RESPAWN_CHARACTER& operator=(const SC_NOTI_RESPAWN_CHARACTER& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_NOTI_RESPAWN_CHARACTER& default_instance();

  static inline const SC_NOTI_RESPAWN_CHARACTER* internal_default_instance() {
    return reinterpret_cast<const SC_NOTI_RESPAWN_CHARACTER*>(
               &_SC_NOTI_RESPAWN_CHARACTER_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(SC_NOTI_RESPAWN_CHARACTER* other);

  // implements Message ----------------------------------------------

  inline SC_NOTI_RESPAWN_CHARACTER* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_NOTI_RESPAWN_CHARACTER* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_NOTI_RESPAWN_CHARACTER& from);
  void MergeFrom(const SC_NOTI_RESPAWN_CHARACTER& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_NOTI_RESPAWN_CHARACTER* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 obj_id = 1;
  void clear_obj_id();
  static const int kObjIdFieldNumber = 1;
  ::google::protobuf::int64 obj_id() const;
  void set_obj_id(::google::protobuf::int64 value);

  // float pos_x = 2;
  void clear_pos_x();
  static const int kPosXFieldNumber = 2;
  float pos_x() const;
  void set_pos_x(float value);

  // float pos_y = 3;
  void clear_pos_y();
  static const int kPosYFieldNumber = 3;
  float pos_y() const;
  void set_pos_y(float value);

  // float pos_z = 4;
  void clear_pos_z();
  static const int kPosZFieldNumber = 4;
  float pos_z() const;
  void set_pos_z(float value);

  // int32 max_hp = 5;
  void clear_max_hp();
  static const int kMaxHpFieldNumber = 5;
  ::google::protobuf::int32 max_hp() const;
  void set_max_hp(::google::protobuf::int32 value);

  // int32 hp = 6;
  void clear_hp();
  static const int kHpFieldNumber = 6;
  ::google::protobuf::int32 hp() const;
  void set_hp(::google::protobuf::int32 value);

  // float speed = 7;
  void clear_speed();
  static const int kSpeedFieldNumber = 7;
  float speed() const;
  void set_speed(float value);

  // float reload_time = 8;
  void clear_reload_time();
  static const int kReloadTimeFieldNumber = 8;
  float reload_time() const;
  void set_reload_time(float value);

  // @@protoc_insertion_point(class_scope:GAME.SC_NOTI_RESPAWN_CHARACTER)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 obj_id_;
  float pos_x_;
  float pos_y_;
  float pos_z_;
  ::google::protobuf::int32 max_hp_;
  ::google::protobuf::int32 hp_;
  float speed_;
  float reload_time_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_SELECT_BUFF : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.SC_SELECT_BUFF) */ {
 public:
  SC_SELECT_BUFF();
  virtual ~SC_SELECT_BUFF();

  SC_SELECT_BUFF(const SC_SELECT_BUFF& from);

  inline SC_SELECT_BUFF& operator=(const SC_SELECT_BUFF& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_SELECT_BUFF& default_instance();

  static inline const SC_SELECT_BUFF* internal_default_instance() {
    return reinterpret_cast<const SC_SELECT_BUFF*>(
               &_SC_SELECT_BUFF_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(SC_SELECT_BUFF* other);

  // implements Message ----------------------------------------------

  inline SC_SELECT_BUFF* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_SELECT_BUFF* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_SELECT_BUFF& from);
  void MergeFrom(const SC_SELECT_BUFF& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_SELECT_BUFF* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GAME.SC_SELECT_BUFF)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 count_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CS_ENHANCE_BUFF : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.CS_ENHANCE_BUFF) */ {
 public:
  CS_ENHANCE_BUFF();
  virtual ~CS_ENHANCE_BUFF();

  CS_ENHANCE_BUFF(const CS_ENHANCE_BUFF& from);

  inline CS_ENHANCE_BUFF& operator=(const CS_ENHANCE_BUFF& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_ENHANCE_BUFF& default_instance();

  static inline const CS_ENHANCE_BUFF* internal_default_instance() {
    return reinterpret_cast<const CS_ENHANCE_BUFF*>(
               &_CS_ENHANCE_BUFF_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(CS_ENHANCE_BUFF* other);

  // implements Message ----------------------------------------------

  inline CS_ENHANCE_BUFF* New() const PROTOBUF_FINAL { return New(NULL); }

  CS_ENHANCE_BUFF* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CS_ENHANCE_BUFF& from);
  void MergeFrom(const CS_ENHANCE_BUFF& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CS_ENHANCE_BUFF* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 buff_type = 1;
  void clear_buff_type();
  static const int kBuffTypeFieldNumber = 1;
  ::google::protobuf::int32 buff_type() const;
  void set_buff_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GAME.CS_ENHANCE_BUFF)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 buff_type_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SC_NOTI_UPDATE_CHARACTER_STATUS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GAME.SC_NOTI_UPDATE_CHARACTER_STATUS) */ {
 public:
  SC_NOTI_UPDATE_CHARACTER_STATUS();
  virtual ~SC_NOTI_UPDATE_CHARACTER_STATUS();

  SC_NOTI_UPDATE_CHARACTER_STATUS(const SC_NOTI_UPDATE_CHARACTER_STATUS& from);

  inline SC_NOTI_UPDATE_CHARACTER_STATUS& operator=(const SC_NOTI_UPDATE_CHARACTER_STATUS& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_NOTI_UPDATE_CHARACTER_STATUS& default_instance();

  static inline const SC_NOTI_UPDATE_CHARACTER_STATUS* internal_default_instance() {
    return reinterpret_cast<const SC_NOTI_UPDATE_CHARACTER_STATUS*>(
               &_SC_NOTI_UPDATE_CHARACTER_STATUS_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(SC_NOTI_UPDATE_CHARACTER_STATUS* other);

  // implements Message ----------------------------------------------

  inline SC_NOTI_UPDATE_CHARACTER_STATUS* New() const PROTOBUF_FINAL { return New(NULL); }

  SC_NOTI_UPDATE_CHARACTER_STATUS* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SC_NOTI_UPDATE_CHARACTER_STATUS& from);
  void MergeFrom(const SC_NOTI_UPDATE_CHARACTER_STATUS& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SC_NOTI_UPDATE_CHARACTER_STATUS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 obj_id = 1;
  void clear_obj_id();
  static const int kObjIdFieldNumber = 1;
  ::google::protobuf::int64 obj_id() const;
  void set_obj_id(::google::protobuf::int64 value);

  // int32 max_hp = 2;
  void clear_max_hp();
  static const int kMaxHpFieldNumber = 2;
  ::google::protobuf::int32 max_hp() const;
  void set_max_hp(::google::protobuf::int32 value);

  // int32 hp = 3;
  void clear_hp();
  static const int kHpFieldNumber = 3;
  ::google::protobuf::int32 hp() const;
  void set_hp(::google::protobuf::int32 value);

  // float speed = 4;
  void clear_speed();
  static const int kSpeedFieldNumber = 4;
  float speed() const;
  void set_speed(float value);

  // float reload_time = 5;
  void clear_reload_time();
  static const int kReloadTimeFieldNumber = 5;
  float reload_time() const;
  void set_reload_time(float value);

  // @@protoc_insertion_point(class_scope:GAME.SC_NOTI_UPDATE_CHARACTER_STATUS)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 obj_id_;
  ::google::protobuf::int32 max_hp_;
  ::google::protobuf::int32 hp_;
  float speed_;
  float reload_time_;
  mutable int _cached_size_;
  friend struct protobuf_GAME_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CS_PING

// int64 timestamp = 1;
inline void CS_PING::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CS_PING::timestamp() const {
  // @@protoc_insertion_point(field_get:GAME.CS_PING.timestamp)
  return timestamp_;
}
inline void CS_PING::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_PING.timestamp)
}

// -------------------------------------------------------------------

// SC_PING

// int64 timestamp = 1;
inline void SC_PING::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SC_PING::timestamp() const {
  // @@protoc_insertion_point(field_get:GAME.SC_PING.timestamp)
  return timestamp_;
}
inline void SC_PING::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_PING.timestamp)
}

// -------------------------------------------------------------------

// OTHER_INFO

// int64 obj_id = 1;
inline void OTHER_INFO::clear_obj_id() {
  obj_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OTHER_INFO::obj_id() const {
  // @@protoc_insertion_point(field_get:GAME.OTHER_INFO.obj_id)
  return obj_id_;
}
inline void OTHER_INFO::set_obj_id(::google::protobuf::int64 value) {
  
  obj_id_ = value;
  // @@protoc_insertion_point(field_set:GAME.OTHER_INFO.obj_id)
}

// int32 tank_type = 2;
inline void OTHER_INFO::clear_tank_type() {
  tank_type_ = 0;
}
inline ::google::protobuf::int32 OTHER_INFO::tank_type() const {
  // @@protoc_insertion_point(field_get:GAME.OTHER_INFO.tank_type)
  return tank_type_;
}
inline void OTHER_INFO::set_tank_type(::google::protobuf::int32 value) {
  
  tank_type_ = value;
  // @@protoc_insertion_point(field_set:GAME.OTHER_INFO.tank_type)
}

// string nickname = 3;
inline void OTHER_INFO::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OTHER_INFO::nickname() const {
  // @@protoc_insertion_point(field_get:GAME.OTHER_INFO.nickname)
  return nickname_.GetNoArena();
}
inline void OTHER_INFO::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GAME.OTHER_INFO.nickname)
}
#if LANG_CXX11
inline void OTHER_INFO::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GAME.OTHER_INFO.nickname)
}
#endif
inline void OTHER_INFO::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GAME.OTHER_INFO.nickname)
}
inline void OTHER_INFO::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GAME.OTHER_INFO.nickname)
}
inline ::std::string* OTHER_INFO::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:GAME.OTHER_INFO.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OTHER_INFO::release_nickname() {
  // @@protoc_insertion_point(field_release:GAME.OTHER_INFO.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OTHER_INFO::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:GAME.OTHER_INFO.nickname)
}

// float pos_x = 4;
inline void OTHER_INFO::clear_pos_x() {
  pos_x_ = 0;
}
inline float OTHER_INFO::pos_x() const {
  // @@protoc_insertion_point(field_get:GAME.OTHER_INFO.pos_x)
  return pos_x_;
}
inline void OTHER_INFO::set_pos_x(float value) {
  
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:GAME.OTHER_INFO.pos_x)
}

// float pos_y = 5;
inline void OTHER_INFO::clear_pos_y() {
  pos_y_ = 0;
}
inline float OTHER_INFO::pos_y() const {
  // @@protoc_insertion_point(field_get:GAME.OTHER_INFO.pos_y)
  return pos_y_;
}
inline void OTHER_INFO::set_pos_y(float value) {
  
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:GAME.OTHER_INFO.pos_y)
}

// float pos_z = 6;
inline void OTHER_INFO::clear_pos_z() {
  pos_z_ = 0;
}
inline float OTHER_INFO::pos_z() const {
  // @@protoc_insertion_point(field_get:GAME.OTHER_INFO.pos_z)
  return pos_z_;
}
inline void OTHER_INFO::set_pos_z(float value) {
  
  pos_z_ = value;
  // @@protoc_insertion_point(field_set:GAME.OTHER_INFO.pos_z)
}

// int32 max_hp = 7;
inline void OTHER_INFO::clear_max_hp() {
  max_hp_ = 0;
}
inline ::google::protobuf::int32 OTHER_INFO::max_hp() const {
  // @@protoc_insertion_point(field_get:GAME.OTHER_INFO.max_hp)
  return max_hp_;
}
inline void OTHER_INFO::set_max_hp(::google::protobuf::int32 value) {
  
  max_hp_ = value;
  // @@protoc_insertion_point(field_set:GAME.OTHER_INFO.max_hp)
}

// int32 hp = 8;
inline void OTHER_INFO::clear_hp() {
  hp_ = 0;
}
inline ::google::protobuf::int32 OTHER_INFO::hp() const {
  // @@protoc_insertion_point(field_get:GAME.OTHER_INFO.hp)
  return hp_;
}
inline void OTHER_INFO::set_hp(::google::protobuf::int32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:GAME.OTHER_INFO.hp)
}

// float speed = 9;
inline void OTHER_INFO::clear_speed() {
  speed_ = 0;
}
inline float OTHER_INFO::speed() const {
  // @@protoc_insertion_point(field_get:GAME.OTHER_INFO.speed)
  return speed_;
}
inline void OTHER_INFO::set_speed(float value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:GAME.OTHER_INFO.speed)
}

// float reload_time = 10;
inline void OTHER_INFO::clear_reload_time() {
  reload_time_ = 0;
}
inline float OTHER_INFO::reload_time() const {
  // @@protoc_insertion_point(field_get:GAME.OTHER_INFO.reload_time)
  return reload_time_;
}
inline void OTHER_INFO::set_reload_time(float value) {
  
  reload_time_ = value;
  // @@protoc_insertion_point(field_set:GAME.OTHER_INFO.reload_time)
}

// -------------------------------------------------------------------

// CS_SYNC_FIELD

// int32 field_id = 1;
inline void CS_SYNC_FIELD::clear_field_id() {
  field_id_ = 0;
}
inline ::google::protobuf::int32 CS_SYNC_FIELD::field_id() const {
  // @@protoc_insertion_point(field_get:GAME.CS_SYNC_FIELD.field_id)
  return field_id_;
}
inline void CS_SYNC_FIELD::set_field_id(::google::protobuf::int32 value) {
  
  field_id_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_SYNC_FIELD.field_id)
}

// -------------------------------------------------------------------

// SC_SYNC_FIELD

// int64 obj_id = 1;
inline void SC_SYNC_FIELD::clear_obj_id() {
  obj_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SC_SYNC_FIELD::obj_id() const {
  // @@protoc_insertion_point(field_get:GAME.SC_SYNC_FIELD.obj_id)
  return obj_id_;
}
inline void SC_SYNC_FIELD::set_obj_id(::google::protobuf::int64 value) {
  
  obj_id_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_SYNC_FIELD.obj_id)
}

// int32 tank_type = 2;
inline void SC_SYNC_FIELD::clear_tank_type() {
  tank_type_ = 0;
}
inline ::google::protobuf::int32 SC_SYNC_FIELD::tank_type() const {
  // @@protoc_insertion_point(field_get:GAME.SC_SYNC_FIELD.tank_type)
  return tank_type_;
}
inline void SC_SYNC_FIELD::set_tank_type(::google::protobuf::int32 value) {
  
  tank_type_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_SYNC_FIELD.tank_type)
}

// string nickname = 3;
inline void SC_SYNC_FIELD::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SC_SYNC_FIELD::nickname() const {
  // @@protoc_insertion_point(field_get:GAME.SC_SYNC_FIELD.nickname)
  return nickname_.GetNoArena();
}
inline void SC_SYNC_FIELD::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GAME.SC_SYNC_FIELD.nickname)
}
#if LANG_CXX11
inline void SC_SYNC_FIELD::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GAME.SC_SYNC_FIELD.nickname)
}
#endif
inline void SC_SYNC_FIELD::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GAME.SC_SYNC_FIELD.nickname)
}
inline void SC_SYNC_FIELD::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GAME.SC_SYNC_FIELD.nickname)
}
inline ::std::string* SC_SYNC_FIELD::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:GAME.SC_SYNC_FIELD.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_SYNC_FIELD::release_nickname() {
  // @@protoc_insertion_point(field_release:GAME.SC_SYNC_FIELD.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_SYNC_FIELD::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:GAME.SC_SYNC_FIELD.nickname)
}

// float pos_x = 4;
inline void SC_SYNC_FIELD::clear_pos_x() {
  pos_x_ = 0;
}
inline float SC_SYNC_FIELD::pos_x() const {
  // @@protoc_insertion_point(field_get:GAME.SC_SYNC_FIELD.pos_x)
  return pos_x_;
}
inline void SC_SYNC_FIELD::set_pos_x(float value) {
  
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_SYNC_FIELD.pos_x)
}

// float pos_y = 5;
inline void SC_SYNC_FIELD::clear_pos_y() {
  pos_y_ = 0;
}
inline float SC_SYNC_FIELD::pos_y() const {
  // @@protoc_insertion_point(field_get:GAME.SC_SYNC_FIELD.pos_y)
  return pos_y_;
}
inline void SC_SYNC_FIELD::set_pos_y(float value) {
  
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_SYNC_FIELD.pos_y)
}

// float pos_z = 6;
inline void SC_SYNC_FIELD::clear_pos_z() {
  pos_z_ = 0;
}
inline float SC_SYNC_FIELD::pos_z() const {
  // @@protoc_insertion_point(field_get:GAME.SC_SYNC_FIELD.pos_z)
  return pos_z_;
}
inline void SC_SYNC_FIELD::set_pos_z(float value) {
  
  pos_z_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_SYNC_FIELD.pos_z)
}

// int32 max_hp = 7;
inline void SC_SYNC_FIELD::clear_max_hp() {
  max_hp_ = 0;
}
inline ::google::protobuf::int32 SC_SYNC_FIELD::max_hp() const {
  // @@protoc_insertion_point(field_get:GAME.SC_SYNC_FIELD.max_hp)
  return max_hp_;
}
inline void SC_SYNC_FIELD::set_max_hp(::google::protobuf::int32 value) {
  
  max_hp_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_SYNC_FIELD.max_hp)
}

// int32 hp = 8;
inline void SC_SYNC_FIELD::clear_hp() {
  hp_ = 0;
}
inline ::google::protobuf::int32 SC_SYNC_FIELD::hp() const {
  // @@protoc_insertion_point(field_get:GAME.SC_SYNC_FIELD.hp)
  return hp_;
}
inline void SC_SYNC_FIELD::set_hp(::google::protobuf::int32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_SYNC_FIELD.hp)
}

// float speed = 9;
inline void SC_SYNC_FIELD::clear_speed() {
  speed_ = 0;
}
inline float SC_SYNC_FIELD::speed() const {
  // @@protoc_insertion_point(field_get:GAME.SC_SYNC_FIELD.speed)
  return speed_;
}
inline void SC_SYNC_FIELD::set_speed(float value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_SYNC_FIELD.speed)
}

// float reload_time = 10;
inline void SC_SYNC_FIELD::clear_reload_time() {
  reload_time_ = 0;
}
inline float SC_SYNC_FIELD::reload_time() const {
  // @@protoc_insertion_point(field_get:GAME.SC_SYNC_FIELD.reload_time)
  return reload_time_;
}
inline void SC_SYNC_FIELD::set_reload_time(float value) {
  
  reload_time_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_SYNC_FIELD.reload_time)
}

// repeated .GAME.OTHER_INFO other_infos = 11;
inline int SC_SYNC_FIELD::other_infos_size() const {
  return other_infos_.size();
}
inline void SC_SYNC_FIELD::clear_other_infos() {
  other_infos_.Clear();
}
inline const ::GAME::OTHER_INFO& SC_SYNC_FIELD::other_infos(int index) const {
  // @@protoc_insertion_point(field_get:GAME.SC_SYNC_FIELD.other_infos)
  return other_infos_.Get(index);
}
inline ::GAME::OTHER_INFO* SC_SYNC_FIELD::mutable_other_infos(int index) {
  // @@protoc_insertion_point(field_mutable:GAME.SC_SYNC_FIELD.other_infos)
  return other_infos_.Mutable(index);
}
inline ::GAME::OTHER_INFO* SC_SYNC_FIELD::add_other_infos() {
  // @@protoc_insertion_point(field_add:GAME.SC_SYNC_FIELD.other_infos)
  return other_infos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::GAME::OTHER_INFO >*
SC_SYNC_FIELD::mutable_other_infos() {
  // @@protoc_insertion_point(field_mutable_list:GAME.SC_SYNC_FIELD.other_infos)
  return &other_infos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::GAME::OTHER_INFO >&
SC_SYNC_FIELD::other_infos() const {
  // @@protoc_insertion_point(field_list:GAME.SC_SYNC_FIELD.other_infos)
  return other_infos_;
}

// -------------------------------------------------------------------

// SC_NOTI_OTHER_ENTER_FIELD

// int64 obj_id = 1;
inline void SC_NOTI_OTHER_ENTER_FIELD::clear_obj_id() {
  obj_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SC_NOTI_OTHER_ENTER_FIELD::obj_id() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_OTHER_ENTER_FIELD.obj_id)
  return obj_id_;
}
inline void SC_NOTI_OTHER_ENTER_FIELD::set_obj_id(::google::protobuf::int64 value) {
  
  obj_id_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_OTHER_ENTER_FIELD.obj_id)
}

// int32 tank_type = 2;
inline void SC_NOTI_OTHER_ENTER_FIELD::clear_tank_type() {
  tank_type_ = 0;
}
inline ::google::protobuf::int32 SC_NOTI_OTHER_ENTER_FIELD::tank_type() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_OTHER_ENTER_FIELD.tank_type)
  return tank_type_;
}
inline void SC_NOTI_OTHER_ENTER_FIELD::set_tank_type(::google::protobuf::int32 value) {
  
  tank_type_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_OTHER_ENTER_FIELD.tank_type)
}

// string nickname = 3;
inline void SC_NOTI_OTHER_ENTER_FIELD::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SC_NOTI_OTHER_ENTER_FIELD::nickname() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_OTHER_ENTER_FIELD.nickname)
  return nickname_.GetNoArena();
}
inline void SC_NOTI_OTHER_ENTER_FIELD::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_OTHER_ENTER_FIELD.nickname)
}
#if LANG_CXX11
inline void SC_NOTI_OTHER_ENTER_FIELD::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GAME.SC_NOTI_OTHER_ENTER_FIELD.nickname)
}
#endif
inline void SC_NOTI_OTHER_ENTER_FIELD::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GAME.SC_NOTI_OTHER_ENTER_FIELD.nickname)
}
inline void SC_NOTI_OTHER_ENTER_FIELD::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GAME.SC_NOTI_OTHER_ENTER_FIELD.nickname)
}
inline ::std::string* SC_NOTI_OTHER_ENTER_FIELD::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:GAME.SC_NOTI_OTHER_ENTER_FIELD.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_NOTI_OTHER_ENTER_FIELD::release_nickname() {
  // @@protoc_insertion_point(field_release:GAME.SC_NOTI_OTHER_ENTER_FIELD.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_NOTI_OTHER_ENTER_FIELD::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:GAME.SC_NOTI_OTHER_ENTER_FIELD.nickname)
}

// float pos_x = 4;
inline void SC_NOTI_OTHER_ENTER_FIELD::clear_pos_x() {
  pos_x_ = 0;
}
inline float SC_NOTI_OTHER_ENTER_FIELD::pos_x() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_OTHER_ENTER_FIELD.pos_x)
  return pos_x_;
}
inline void SC_NOTI_OTHER_ENTER_FIELD::set_pos_x(float value) {
  
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_OTHER_ENTER_FIELD.pos_x)
}

// float pos_y = 5;
inline void SC_NOTI_OTHER_ENTER_FIELD::clear_pos_y() {
  pos_y_ = 0;
}
inline float SC_NOTI_OTHER_ENTER_FIELD::pos_y() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_OTHER_ENTER_FIELD.pos_y)
  return pos_y_;
}
inline void SC_NOTI_OTHER_ENTER_FIELD::set_pos_y(float value) {
  
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_OTHER_ENTER_FIELD.pos_y)
}

// float pos_z = 6;
inline void SC_NOTI_OTHER_ENTER_FIELD::clear_pos_z() {
  pos_z_ = 0;
}
inline float SC_NOTI_OTHER_ENTER_FIELD::pos_z() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_OTHER_ENTER_FIELD.pos_z)
  return pos_z_;
}
inline void SC_NOTI_OTHER_ENTER_FIELD::set_pos_z(float value) {
  
  pos_z_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_OTHER_ENTER_FIELD.pos_z)
}

// int32 max_hp = 7;
inline void SC_NOTI_OTHER_ENTER_FIELD::clear_max_hp() {
  max_hp_ = 0;
}
inline ::google::protobuf::int32 SC_NOTI_OTHER_ENTER_FIELD::max_hp() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_OTHER_ENTER_FIELD.max_hp)
  return max_hp_;
}
inline void SC_NOTI_OTHER_ENTER_FIELD::set_max_hp(::google::protobuf::int32 value) {
  
  max_hp_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_OTHER_ENTER_FIELD.max_hp)
}

// int32 hp = 8;
inline void SC_NOTI_OTHER_ENTER_FIELD::clear_hp() {
  hp_ = 0;
}
inline ::google::protobuf::int32 SC_NOTI_OTHER_ENTER_FIELD::hp() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_OTHER_ENTER_FIELD.hp)
  return hp_;
}
inline void SC_NOTI_OTHER_ENTER_FIELD::set_hp(::google::protobuf::int32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_OTHER_ENTER_FIELD.hp)
}

// float speed = 9;
inline void SC_NOTI_OTHER_ENTER_FIELD::clear_speed() {
  speed_ = 0;
}
inline float SC_NOTI_OTHER_ENTER_FIELD::speed() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_OTHER_ENTER_FIELD.speed)
  return speed_;
}
inline void SC_NOTI_OTHER_ENTER_FIELD::set_speed(float value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_OTHER_ENTER_FIELD.speed)
}

// float reload_time = 10;
inline void SC_NOTI_OTHER_ENTER_FIELD::clear_reload_time() {
  reload_time_ = 0;
}
inline float SC_NOTI_OTHER_ENTER_FIELD::reload_time() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_OTHER_ENTER_FIELD.reload_time)
  return reload_time_;
}
inline void SC_NOTI_OTHER_ENTER_FIELD::set_reload_time(float value) {
  
  reload_time_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_OTHER_ENTER_FIELD.reload_time)
}

// -------------------------------------------------------------------

// SC_NOTI_OTHER_LEAVE_FIELD

// int64 obj_id = 1;
inline void SC_NOTI_OTHER_LEAVE_FIELD::clear_obj_id() {
  obj_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SC_NOTI_OTHER_LEAVE_FIELD::obj_id() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_OTHER_LEAVE_FIELD.obj_id)
  return obj_id_;
}
inline void SC_NOTI_OTHER_LEAVE_FIELD::set_obj_id(::google::protobuf::int64 value) {
  
  obj_id_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_OTHER_LEAVE_FIELD.obj_id)
}

// -------------------------------------------------------------------

// CS_NOTI_MOVE

// float pos_x = 1;
inline void CS_NOTI_MOVE::clear_pos_x() {
  pos_x_ = 0;
}
inline float CS_NOTI_MOVE::pos_x() const {
  // @@protoc_insertion_point(field_get:GAME.CS_NOTI_MOVE.pos_x)
  return pos_x_;
}
inline void CS_NOTI_MOVE::set_pos_x(float value) {
  
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_NOTI_MOVE.pos_x)
}

// float pos_y = 2;
inline void CS_NOTI_MOVE::clear_pos_y() {
  pos_y_ = 0;
}
inline float CS_NOTI_MOVE::pos_y() const {
  // @@protoc_insertion_point(field_get:GAME.CS_NOTI_MOVE.pos_y)
  return pos_y_;
}
inline void CS_NOTI_MOVE::set_pos_y(float value) {
  
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_NOTI_MOVE.pos_y)
}

// float pos_z = 3;
inline void CS_NOTI_MOVE::clear_pos_z() {
  pos_z_ = 0;
}
inline float CS_NOTI_MOVE::pos_z() const {
  // @@protoc_insertion_point(field_get:GAME.CS_NOTI_MOVE.pos_z)
  return pos_z_;
}
inline void CS_NOTI_MOVE::set_pos_z(float value) {
  
  pos_z_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_NOTI_MOVE.pos_z)
}

// -------------------------------------------------------------------

// SC_NOTI_OTHER_MOVE

// int64 obj_id = 1;
inline void SC_NOTI_OTHER_MOVE::clear_obj_id() {
  obj_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SC_NOTI_OTHER_MOVE::obj_id() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_OTHER_MOVE.obj_id)
  return obj_id_;
}
inline void SC_NOTI_OTHER_MOVE::set_obj_id(::google::protobuf::int64 value) {
  
  obj_id_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_OTHER_MOVE.obj_id)
}

// float pos_x = 2;
inline void SC_NOTI_OTHER_MOVE::clear_pos_x() {
  pos_x_ = 0;
}
inline float SC_NOTI_OTHER_MOVE::pos_x() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_OTHER_MOVE.pos_x)
  return pos_x_;
}
inline void SC_NOTI_OTHER_MOVE::set_pos_x(float value) {
  
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_OTHER_MOVE.pos_x)
}

// float pos_y = 3;
inline void SC_NOTI_OTHER_MOVE::clear_pos_y() {
  pos_y_ = 0;
}
inline float SC_NOTI_OTHER_MOVE::pos_y() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_OTHER_MOVE.pos_y)
  return pos_y_;
}
inline void SC_NOTI_OTHER_MOVE::set_pos_y(float value) {
  
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_OTHER_MOVE.pos_y)
}

// float pos_z = 4;
inline void SC_NOTI_OTHER_MOVE::clear_pos_z() {
  pos_z_ = 0;
}
inline float SC_NOTI_OTHER_MOVE::pos_z() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_OTHER_MOVE.pos_z)
  return pos_z_;
}
inline void SC_NOTI_OTHER_MOVE::set_pos_z(float value) {
  
  pos_z_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_OTHER_MOVE.pos_z)
}

// -------------------------------------------------------------------

// BULLET_INFO

// int64 bullet_id = 1;
inline void BULLET_INFO::clear_bullet_id() {
  bullet_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BULLET_INFO::bullet_id() const {
  // @@protoc_insertion_point(field_get:GAME.BULLET_INFO.bullet_id)
  return bullet_id_;
}
inline void BULLET_INFO::set_bullet_id(::google::protobuf::int64 value) {
  
  bullet_id_ = value;
  // @@protoc_insertion_point(field_set:GAME.BULLET_INFO.bullet_id)
}

// float dir_x = 2;
inline void BULLET_INFO::clear_dir_x() {
  dir_x_ = 0;
}
inline float BULLET_INFO::dir_x() const {
  // @@protoc_insertion_point(field_get:GAME.BULLET_INFO.dir_x)
  return dir_x_;
}
inline void BULLET_INFO::set_dir_x(float value) {
  
  dir_x_ = value;
  // @@protoc_insertion_point(field_set:GAME.BULLET_INFO.dir_x)
}

// float dir_y = 3;
inline void BULLET_INFO::clear_dir_y() {
  dir_y_ = 0;
}
inline float BULLET_INFO::dir_y() const {
  // @@protoc_insertion_point(field_get:GAME.BULLET_INFO.dir_y)
  return dir_y_;
}
inline void BULLET_INFO::set_dir_y(float value) {
  
  dir_y_ = value;
  // @@protoc_insertion_point(field_set:GAME.BULLET_INFO.dir_y)
}

// float dir_z = 4;
inline void BULLET_INFO::clear_dir_z() {
  dir_z_ = 0;
}
inline float BULLET_INFO::dir_z() const {
  // @@protoc_insertion_point(field_get:GAME.BULLET_INFO.dir_z)
  return dir_z_;
}
inline void BULLET_INFO::set_dir_z(float value) {
  
  dir_z_ = value;
  // @@protoc_insertion_point(field_set:GAME.BULLET_INFO.dir_z)
}

// float size_x = 5;
inline void BULLET_INFO::clear_size_x() {
  size_x_ = 0;
}
inline float BULLET_INFO::size_x() const {
  // @@protoc_insertion_point(field_get:GAME.BULLET_INFO.size_x)
  return size_x_;
}
inline void BULLET_INFO::set_size_x(float value) {
  
  size_x_ = value;
  // @@protoc_insertion_point(field_set:GAME.BULLET_INFO.size_x)
}

// float size_y = 6;
inline void BULLET_INFO::clear_size_y() {
  size_y_ = 0;
}
inline float BULLET_INFO::size_y() const {
  // @@protoc_insertion_point(field_get:GAME.BULLET_INFO.size_y)
  return size_y_;
}
inline void BULLET_INFO::set_size_y(float value) {
  
  size_y_ = value;
  // @@protoc_insertion_point(field_set:GAME.BULLET_INFO.size_y)
}

// float size_z = 7;
inline void BULLET_INFO::clear_size_z() {
  size_z_ = 0;
}
inline float BULLET_INFO::size_z() const {
  // @@protoc_insertion_point(field_get:GAME.BULLET_INFO.size_z)
  return size_z_;
}
inline void BULLET_INFO::set_size_z(float value) {
  
  size_z_ = value;
  // @@protoc_insertion_point(field_set:GAME.BULLET_INFO.size_z)
}

// float speed = 8;
inline void BULLET_INFO::clear_speed() {
  speed_ = 0;
}
inline float BULLET_INFO::speed() const {
  // @@protoc_insertion_point(field_get:GAME.BULLET_INFO.speed)
  return speed_;
}
inline void BULLET_INFO::set_speed(float value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:GAME.BULLET_INFO.speed)
}

// float distance = 9;
inline void BULLET_INFO::clear_distance() {
  distance_ = 0;
}
inline float BULLET_INFO::distance() const {
  // @@protoc_insertion_point(field_get:GAME.BULLET_INFO.distance)
  return distance_;
}
inline void BULLET_INFO::set_distance(float value) {
  
  distance_ = value;
  // @@protoc_insertion_point(field_set:GAME.BULLET_INFO.distance)
}

// -------------------------------------------------------------------

// CS_FIRE

// int32 bullet_type = 1;
inline void CS_FIRE::clear_bullet_type() {
  bullet_type_ = 0;
}
inline ::google::protobuf::int32 CS_FIRE::bullet_type() const {
  // @@protoc_insertion_point(field_get:GAME.CS_FIRE.bullet_type)
  return bullet_type_;
}
inline void CS_FIRE::set_bullet_type(::google::protobuf::int32 value) {
  
  bullet_type_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_FIRE.bullet_type)
}

// float pos_x = 2;
inline void CS_FIRE::clear_pos_x() {
  pos_x_ = 0;
}
inline float CS_FIRE::pos_x() const {
  // @@protoc_insertion_point(field_get:GAME.CS_FIRE.pos_x)
  return pos_x_;
}
inline void CS_FIRE::set_pos_x(float value) {
  
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_FIRE.pos_x)
}

// float pos_y = 3;
inline void CS_FIRE::clear_pos_y() {
  pos_y_ = 0;
}
inline float CS_FIRE::pos_y() const {
  // @@protoc_insertion_point(field_get:GAME.CS_FIRE.pos_y)
  return pos_y_;
}
inline void CS_FIRE::set_pos_y(float value) {
  
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_FIRE.pos_y)
}

// float pos_z = 4;
inline void CS_FIRE::clear_pos_z() {
  pos_z_ = 0;
}
inline float CS_FIRE::pos_z() const {
  // @@protoc_insertion_point(field_get:GAME.CS_FIRE.pos_z)
  return pos_z_;
}
inline void CS_FIRE::set_pos_z(float value) {
  
  pos_z_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_FIRE.pos_z)
}

// float dir_x = 5;
inline void CS_FIRE::clear_dir_x() {
  dir_x_ = 0;
}
inline float CS_FIRE::dir_x() const {
  // @@protoc_insertion_point(field_get:GAME.CS_FIRE.dir_x)
  return dir_x_;
}
inline void CS_FIRE::set_dir_x(float value) {
  
  dir_x_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_FIRE.dir_x)
}

// float dir_y = 6;
inline void CS_FIRE::clear_dir_y() {
  dir_y_ = 0;
}
inline float CS_FIRE::dir_y() const {
  // @@protoc_insertion_point(field_get:GAME.CS_FIRE.dir_y)
  return dir_y_;
}
inline void CS_FIRE::set_dir_y(float value) {
  
  dir_y_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_FIRE.dir_y)
}

// float dir_z = 7;
inline void CS_FIRE::clear_dir_z() {
  dir_z_ = 0;
}
inline float CS_FIRE::dir_z() const {
  // @@protoc_insertion_point(field_get:GAME.CS_FIRE.dir_z)
  return dir_z_;
}
inline void CS_FIRE::set_dir_z(float value) {
  
  dir_z_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_FIRE.dir_z)
}

// repeated .GAME.BULLET_INFO bullet_infos = 8;
inline int CS_FIRE::bullet_infos_size() const {
  return bullet_infos_.size();
}
inline void CS_FIRE::clear_bullet_infos() {
  bullet_infos_.Clear();
}
inline const ::GAME::BULLET_INFO& CS_FIRE::bullet_infos(int index) const {
  // @@protoc_insertion_point(field_get:GAME.CS_FIRE.bullet_infos)
  return bullet_infos_.Get(index);
}
inline ::GAME::BULLET_INFO* CS_FIRE::mutable_bullet_infos(int index) {
  // @@protoc_insertion_point(field_mutable:GAME.CS_FIRE.bullet_infos)
  return bullet_infos_.Mutable(index);
}
inline ::GAME::BULLET_INFO* CS_FIRE::add_bullet_infos() {
  // @@protoc_insertion_point(field_add:GAME.CS_FIRE.bullet_infos)
  return bullet_infos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::GAME::BULLET_INFO >*
CS_FIRE::mutable_bullet_infos() {
  // @@protoc_insertion_point(field_mutable_list:GAME.CS_FIRE.bullet_infos)
  return &bullet_infos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::GAME::BULLET_INFO >&
CS_FIRE::bullet_infos() const {
  // @@protoc_insertion_point(field_list:GAME.CS_FIRE.bullet_infos)
  return bullet_infos_;
}

// -------------------------------------------------------------------

// SC_NOTI_FIRE

// int64 obj_id = 1;
inline void SC_NOTI_FIRE::clear_obj_id() {
  obj_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SC_NOTI_FIRE::obj_id() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_FIRE.obj_id)
  return obj_id_;
}
inline void SC_NOTI_FIRE::set_obj_id(::google::protobuf::int64 value) {
  
  obj_id_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_FIRE.obj_id)
}

// int32 bullet_type = 2;
inline void SC_NOTI_FIRE::clear_bullet_type() {
  bullet_type_ = 0;
}
inline ::google::protobuf::int32 SC_NOTI_FIRE::bullet_type() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_FIRE.bullet_type)
  return bullet_type_;
}
inline void SC_NOTI_FIRE::set_bullet_type(::google::protobuf::int32 value) {
  
  bullet_type_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_FIRE.bullet_type)
}

// float pos_x = 3;
inline void SC_NOTI_FIRE::clear_pos_x() {
  pos_x_ = 0;
}
inline float SC_NOTI_FIRE::pos_x() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_FIRE.pos_x)
  return pos_x_;
}
inline void SC_NOTI_FIRE::set_pos_x(float value) {
  
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_FIRE.pos_x)
}

// float pos_y = 4;
inline void SC_NOTI_FIRE::clear_pos_y() {
  pos_y_ = 0;
}
inline float SC_NOTI_FIRE::pos_y() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_FIRE.pos_y)
  return pos_y_;
}
inline void SC_NOTI_FIRE::set_pos_y(float value) {
  
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_FIRE.pos_y)
}

// float pos_z = 5;
inline void SC_NOTI_FIRE::clear_pos_z() {
  pos_z_ = 0;
}
inline float SC_NOTI_FIRE::pos_z() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_FIRE.pos_z)
  return pos_z_;
}
inline void SC_NOTI_FIRE::set_pos_z(float value) {
  
  pos_z_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_FIRE.pos_z)
}

// float dir_x = 6;
inline void SC_NOTI_FIRE::clear_dir_x() {
  dir_x_ = 0;
}
inline float SC_NOTI_FIRE::dir_x() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_FIRE.dir_x)
  return dir_x_;
}
inline void SC_NOTI_FIRE::set_dir_x(float value) {
  
  dir_x_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_FIRE.dir_x)
}

// float dir_y = 7;
inline void SC_NOTI_FIRE::clear_dir_y() {
  dir_y_ = 0;
}
inline float SC_NOTI_FIRE::dir_y() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_FIRE.dir_y)
  return dir_y_;
}
inline void SC_NOTI_FIRE::set_dir_y(float value) {
  
  dir_y_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_FIRE.dir_y)
}

// float dir_z = 8;
inline void SC_NOTI_FIRE::clear_dir_z() {
  dir_z_ = 0;
}
inline float SC_NOTI_FIRE::dir_z() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_FIRE.dir_z)
  return dir_z_;
}
inline void SC_NOTI_FIRE::set_dir_z(float value) {
  
  dir_z_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_FIRE.dir_z)
}

// repeated .GAME.BULLET_INFO bullet_infos = 9;
inline int SC_NOTI_FIRE::bullet_infos_size() const {
  return bullet_infos_.size();
}
inline void SC_NOTI_FIRE::clear_bullet_infos() {
  bullet_infos_.Clear();
}
inline const ::GAME::BULLET_INFO& SC_NOTI_FIRE::bullet_infos(int index) const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_FIRE.bullet_infos)
  return bullet_infos_.Get(index);
}
inline ::GAME::BULLET_INFO* SC_NOTI_FIRE::mutable_bullet_infos(int index) {
  // @@protoc_insertion_point(field_mutable:GAME.SC_NOTI_FIRE.bullet_infos)
  return bullet_infos_.Mutable(index);
}
inline ::GAME::BULLET_INFO* SC_NOTI_FIRE::add_bullet_infos() {
  // @@protoc_insertion_point(field_add:GAME.SC_NOTI_FIRE.bullet_infos)
  return bullet_infos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::GAME::BULLET_INFO >*
SC_NOTI_FIRE::mutable_bullet_infos() {
  // @@protoc_insertion_point(field_mutable_list:GAME.SC_NOTI_FIRE.bullet_infos)
  return &bullet_infos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::GAME::BULLET_INFO >&
SC_NOTI_FIRE::bullet_infos() const {
  // @@protoc_insertion_point(field_list:GAME.SC_NOTI_FIRE.bullet_infos)
  return bullet_infos_;
}

// -------------------------------------------------------------------

// DAMAGE_INFO

// int64 target_id = 1;
inline void DAMAGE_INFO::clear_target_id() {
  target_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DAMAGE_INFO::target_id() const {
  // @@protoc_insertion_point(field_get:GAME.DAMAGE_INFO.target_id)
  return target_id_;
}
inline void DAMAGE_INFO::set_target_id(::google::protobuf::int64 value) {
  
  target_id_ = value;
  // @@protoc_insertion_point(field_set:GAME.DAMAGE_INFO.target_id)
}

// int32 hp = 2;
inline void DAMAGE_INFO::clear_hp() {
  hp_ = 0;
}
inline ::google::protobuf::int32 DAMAGE_INFO::hp() const {
  // @@protoc_insertion_point(field_get:GAME.DAMAGE_INFO.hp)
  return hp_;
}
inline void DAMAGE_INFO::set_hp(::google::protobuf::int32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:GAME.DAMAGE_INFO.hp)
}

// int64 damage = 3;
inline void DAMAGE_INFO::clear_damage() {
  damage_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DAMAGE_INFO::damage() const {
  // @@protoc_insertion_point(field_get:GAME.DAMAGE_INFO.damage)
  return damage_;
}
inline void DAMAGE_INFO::set_damage(::google::protobuf::int64 value) {
  
  damage_ = value;
  // @@protoc_insertion_point(field_set:GAME.DAMAGE_INFO.damage)
}

// -------------------------------------------------------------------

// SC_NOTI_DESTROY_BULLET

// int64 obj_id = 1;
inline void SC_NOTI_DESTROY_BULLET::clear_obj_id() {
  obj_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SC_NOTI_DESTROY_BULLET::obj_id() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_DESTROY_BULLET.obj_id)
  return obj_id_;
}
inline void SC_NOTI_DESTROY_BULLET::set_obj_id(::google::protobuf::int64 value) {
  
  obj_id_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_DESTROY_BULLET.obj_id)
}

// int64 bullet_id = 2;
inline void SC_NOTI_DESTROY_BULLET::clear_bullet_id() {
  bullet_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SC_NOTI_DESTROY_BULLET::bullet_id() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_DESTROY_BULLET.bullet_id)
  return bullet_id_;
}
inline void SC_NOTI_DESTROY_BULLET::set_bullet_id(::google::protobuf::int64 value) {
  
  bullet_id_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_DESTROY_BULLET.bullet_id)
}

// repeated .GAME.DAMAGE_INFO damage_infos = 3;
inline int SC_NOTI_DESTROY_BULLET::damage_infos_size() const {
  return damage_infos_.size();
}
inline void SC_NOTI_DESTROY_BULLET::clear_damage_infos() {
  damage_infos_.Clear();
}
inline const ::GAME::DAMAGE_INFO& SC_NOTI_DESTROY_BULLET::damage_infos(int index) const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_DESTROY_BULLET.damage_infos)
  return damage_infos_.Get(index);
}
inline ::GAME::DAMAGE_INFO* SC_NOTI_DESTROY_BULLET::mutable_damage_infos(int index) {
  // @@protoc_insertion_point(field_mutable:GAME.SC_NOTI_DESTROY_BULLET.damage_infos)
  return damage_infos_.Mutable(index);
}
inline ::GAME::DAMAGE_INFO* SC_NOTI_DESTROY_BULLET::add_damage_infos() {
  // @@protoc_insertion_point(field_add:GAME.SC_NOTI_DESTROY_BULLET.damage_infos)
  return damage_infos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::GAME::DAMAGE_INFO >*
SC_NOTI_DESTROY_BULLET::mutable_damage_infos() {
  // @@protoc_insertion_point(field_mutable_list:GAME.SC_NOTI_DESTROY_BULLET.damage_infos)
  return &damage_infos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::GAME::DAMAGE_INFO >&
SC_NOTI_DESTROY_BULLET::damage_infos() const {
  // @@protoc_insertion_point(field_list:GAME.SC_NOTI_DESTROY_BULLET.damage_infos)
  return damage_infos_;
}

// -------------------------------------------------------------------

// SC_NOTI_DESTROY_CHARACTER

// int64 obj_id = 1;
inline void SC_NOTI_DESTROY_CHARACTER::clear_obj_id() {
  obj_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SC_NOTI_DESTROY_CHARACTER::obj_id() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_DESTROY_CHARACTER.obj_id)
  return obj_id_;
}
inline void SC_NOTI_DESTROY_CHARACTER::set_obj_id(::google::protobuf::int64 value) {
  
  obj_id_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_DESTROY_CHARACTER.obj_id)
}

// -------------------------------------------------------------------

// CS_RESPAWN_CHARACTER

// -------------------------------------------------------------------

// SC_NOTI_RESPAWN_CHARACTER

// int64 obj_id = 1;
inline void SC_NOTI_RESPAWN_CHARACTER::clear_obj_id() {
  obj_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SC_NOTI_RESPAWN_CHARACTER::obj_id() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_RESPAWN_CHARACTER.obj_id)
  return obj_id_;
}
inline void SC_NOTI_RESPAWN_CHARACTER::set_obj_id(::google::protobuf::int64 value) {
  
  obj_id_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_RESPAWN_CHARACTER.obj_id)
}

// float pos_x = 2;
inline void SC_NOTI_RESPAWN_CHARACTER::clear_pos_x() {
  pos_x_ = 0;
}
inline float SC_NOTI_RESPAWN_CHARACTER::pos_x() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_RESPAWN_CHARACTER.pos_x)
  return pos_x_;
}
inline void SC_NOTI_RESPAWN_CHARACTER::set_pos_x(float value) {
  
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_RESPAWN_CHARACTER.pos_x)
}

// float pos_y = 3;
inline void SC_NOTI_RESPAWN_CHARACTER::clear_pos_y() {
  pos_y_ = 0;
}
inline float SC_NOTI_RESPAWN_CHARACTER::pos_y() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_RESPAWN_CHARACTER.pos_y)
  return pos_y_;
}
inline void SC_NOTI_RESPAWN_CHARACTER::set_pos_y(float value) {
  
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_RESPAWN_CHARACTER.pos_y)
}

// float pos_z = 4;
inline void SC_NOTI_RESPAWN_CHARACTER::clear_pos_z() {
  pos_z_ = 0;
}
inline float SC_NOTI_RESPAWN_CHARACTER::pos_z() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_RESPAWN_CHARACTER.pos_z)
  return pos_z_;
}
inline void SC_NOTI_RESPAWN_CHARACTER::set_pos_z(float value) {
  
  pos_z_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_RESPAWN_CHARACTER.pos_z)
}

// int32 max_hp = 5;
inline void SC_NOTI_RESPAWN_CHARACTER::clear_max_hp() {
  max_hp_ = 0;
}
inline ::google::protobuf::int32 SC_NOTI_RESPAWN_CHARACTER::max_hp() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_RESPAWN_CHARACTER.max_hp)
  return max_hp_;
}
inline void SC_NOTI_RESPAWN_CHARACTER::set_max_hp(::google::protobuf::int32 value) {
  
  max_hp_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_RESPAWN_CHARACTER.max_hp)
}

// int32 hp = 6;
inline void SC_NOTI_RESPAWN_CHARACTER::clear_hp() {
  hp_ = 0;
}
inline ::google::protobuf::int32 SC_NOTI_RESPAWN_CHARACTER::hp() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_RESPAWN_CHARACTER.hp)
  return hp_;
}
inline void SC_NOTI_RESPAWN_CHARACTER::set_hp(::google::protobuf::int32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_RESPAWN_CHARACTER.hp)
}

// float speed = 7;
inline void SC_NOTI_RESPAWN_CHARACTER::clear_speed() {
  speed_ = 0;
}
inline float SC_NOTI_RESPAWN_CHARACTER::speed() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_RESPAWN_CHARACTER.speed)
  return speed_;
}
inline void SC_NOTI_RESPAWN_CHARACTER::set_speed(float value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_RESPAWN_CHARACTER.speed)
}

// float reload_time = 8;
inline void SC_NOTI_RESPAWN_CHARACTER::clear_reload_time() {
  reload_time_ = 0;
}
inline float SC_NOTI_RESPAWN_CHARACTER::reload_time() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_RESPAWN_CHARACTER.reload_time)
  return reload_time_;
}
inline void SC_NOTI_RESPAWN_CHARACTER::set_reload_time(float value) {
  
  reload_time_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_RESPAWN_CHARACTER.reload_time)
}

// -------------------------------------------------------------------

// SC_SELECT_BUFF

// int32 count = 1;
inline void SC_SELECT_BUFF::clear_count() {
  count_ = 0;
}
inline ::google::protobuf::int32 SC_SELECT_BUFF::count() const {
  // @@protoc_insertion_point(field_get:GAME.SC_SELECT_BUFF.count)
  return count_;
}
inline void SC_SELECT_BUFF::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_SELECT_BUFF.count)
}

// -------------------------------------------------------------------

// CS_ENHANCE_BUFF

// int32 buff_type = 1;
inline void CS_ENHANCE_BUFF::clear_buff_type() {
  buff_type_ = 0;
}
inline ::google::protobuf::int32 CS_ENHANCE_BUFF::buff_type() const {
  // @@protoc_insertion_point(field_get:GAME.CS_ENHANCE_BUFF.buff_type)
  return buff_type_;
}
inline void CS_ENHANCE_BUFF::set_buff_type(::google::protobuf::int32 value) {
  
  buff_type_ = value;
  // @@protoc_insertion_point(field_set:GAME.CS_ENHANCE_BUFF.buff_type)
}

// -------------------------------------------------------------------

// SC_NOTI_UPDATE_CHARACTER_STATUS

// int64 obj_id = 1;
inline void SC_NOTI_UPDATE_CHARACTER_STATUS::clear_obj_id() {
  obj_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SC_NOTI_UPDATE_CHARACTER_STATUS::obj_id() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_UPDATE_CHARACTER_STATUS.obj_id)
  return obj_id_;
}
inline void SC_NOTI_UPDATE_CHARACTER_STATUS::set_obj_id(::google::protobuf::int64 value) {
  
  obj_id_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_UPDATE_CHARACTER_STATUS.obj_id)
}

// int32 max_hp = 2;
inline void SC_NOTI_UPDATE_CHARACTER_STATUS::clear_max_hp() {
  max_hp_ = 0;
}
inline ::google::protobuf::int32 SC_NOTI_UPDATE_CHARACTER_STATUS::max_hp() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_UPDATE_CHARACTER_STATUS.max_hp)
  return max_hp_;
}
inline void SC_NOTI_UPDATE_CHARACTER_STATUS::set_max_hp(::google::protobuf::int32 value) {
  
  max_hp_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_UPDATE_CHARACTER_STATUS.max_hp)
}

// int32 hp = 3;
inline void SC_NOTI_UPDATE_CHARACTER_STATUS::clear_hp() {
  hp_ = 0;
}
inline ::google::protobuf::int32 SC_NOTI_UPDATE_CHARACTER_STATUS::hp() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_UPDATE_CHARACTER_STATUS.hp)
  return hp_;
}
inline void SC_NOTI_UPDATE_CHARACTER_STATUS::set_hp(::google::protobuf::int32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_UPDATE_CHARACTER_STATUS.hp)
}

// float speed = 4;
inline void SC_NOTI_UPDATE_CHARACTER_STATUS::clear_speed() {
  speed_ = 0;
}
inline float SC_NOTI_UPDATE_CHARACTER_STATUS::speed() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_UPDATE_CHARACTER_STATUS.speed)
  return speed_;
}
inline void SC_NOTI_UPDATE_CHARACTER_STATUS::set_speed(float value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_UPDATE_CHARACTER_STATUS.speed)
}

// float reload_time = 5;
inline void SC_NOTI_UPDATE_CHARACTER_STATUS::clear_reload_time() {
  reload_time_ = 0;
}
inline float SC_NOTI_UPDATE_CHARACTER_STATUS::reload_time() const {
  // @@protoc_insertion_point(field_get:GAME.SC_NOTI_UPDATE_CHARACTER_STATUS.reload_time)
  return reload_time_;
}
inline void SC_NOTI_UPDATE_CHARACTER_STATUS::set_reload_time(float value) {
  
  reload_time_ = value;
  // @@protoc_insertion_point(field_set:GAME.SC_NOTI_UPDATE_CHARACTER_STATUS.reload_time)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace GAME

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GAME_2eproto__INCLUDED
